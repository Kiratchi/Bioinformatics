1+1
q()
browseVingettes()
log()
log(0)
log(-1)
-(-Inf)
clear
clc
?clear
(-Inf)/(Inf)
(Inf)/(Inf)
log(0)
log(-1)
c = (1,2,3,4)
c(1,2,3,4:5)
?exp
x = 1:10
x
y = 3:7
z = c(x, y)
z
x-1
x^2
x^t
x[1,3]
z[c(1,5)]
z[1:5]
y=x>2
ls y
x[y]
t(x)
z = t(x)
?typeof()
apply(x,1,sum)
apply(z,1,sum)
apply(z,2,sum)
source("Functions.R")
source("~/R/Functions.R")
source("~/R/Functions.R")
source("~/R/Functions.R")
source("~/R/Functions.R")
source("~/R/test1.R")
?library(MASS)
library(MASS)
data(mammals)
source("~/R/data_frames.R")
source("~/R/data_frames.R")
ls()
source("~/R/data_frames.R")
source("~/R/data_frames.R")
ls(mammals)
?mammals
class(mammals)
head(mammals)
head(mammals)
?head
head(x)
head(z)
matrix(1:12,3,4)
y = 1:100
head(y)
source("~/R/Functions.R")
head(mammals)
rownames(mammals)
source("~/R/Functions.R")
mean(x)
mean(z)
mean(,z)
mean(z[,2])
mean(z[2,])
z[2,]
y = matrix(1:2,3,4)
mean(y)
z
y
y[,2]
y = matrix(1:12,3,4)
y
y[,2]
source("~/R/Functions.R")
mammals
mammals[brain]
mammals[,2]
body_std = sqrt(var(mammals[,1]))
body_std = sqrt(var(mammals[,1]))
brain_std = sqrt(var(mammals[,2]))
source("~/R/data_frames.R")
ratio(mammals[,2]/1000/mammals[,1])
ratio=(mammals[,2]/1000/mammals[,1])
body_brain_ratio=(mammals[,2]/1000/mammals[,1])
brain_to_body_ratio=(mammals[,2]/1000/mammals[,1])
mammals2=cbdin(mammals,brain_to_body_ratio)
mammals2=cbind(mammals,brain_to_body_ratio)
mammals2
colnames(mammals)
colnames(mammals2) =c(colnames((mammals)), "Brain/Body")
mammals2
?order
source("~/R/data_frames.R")
mammals.order=order(mammals2[,3], decreasing=TRUE)
mammals2.sorted=mammals2[mammals.order,]
source("~/R/data_frames.R")
source("~/R/data_frames.R")
mammals2.sorted
source("~/R/data_frames.R")
library(MASS)
data(cats)
ls(cats)
rm(ls)
rm(ls())
rm(list=ls())
source("~/R/cats_dataset.R")
?rm
rm(list=ls())
head(cats)
summary(cats)
?summary()
?stdres
?sd
source("~/R/data_frames.R")
mean = mean(cats)
head(cats)
source("~/R/data_frames.R")
rm(list=ls())
source("~/R/cats_dataset.R")
head(cats)
source("~/R/cats_dataset.R")
source("~/R/cats_dataset.R")
?cor
cor(cats[,2],cats[,3])
Bwt-Hwt_cor=cor(cats[,2],cats[,3])
Bwt_Hwt_cor=cor(cats[,2],cats[,3])
female= cats[,1]=="F"
cats.female = cats[femal,]
cats.female = cats[female,]
cats.male = cats[!female,]
male
cats.male
source("~/R/cats_dataset.R")
statistics = statistics_of_Bwt(cats[,2])
statistics_of_Bwt = function(matrix){
mean = mean(matrix)
median = median(matrix)
sd = sqrt(matrix)
var = var(matrix)
return(c(mean, median, sd, var))
}
statistics = statistics_of_Bwt(cats[,2])
Bwt_mean = statistics[1]
Bwt_median = statistics[2]
Bwt_sd = statistics[3]
Bwt_var = statistics[4]
statistics = statistics_of_Bwt(cats[,2])
statistics_of_Bwt = function(matrix){
mean = mean(matrix)
median = median(matrix)
var = var(matrix)
sd = sqrt(var)
return(c(mean, median, sd, var))
}
statistics = statistics_of_Bwt(cats[,2])
Bwt_sd = statistics[3]
female = cats[,1]=="F"
source("~/R/cats_dataset.R")
source("~/R/cats_dataset.R")
var.test(cats.female[,2],cats.male[,2])
source("~/R/cats_dataset.R")
?t.test()
t.test(cats.female[,2],cats.male[,2] var.equal = FALSE)
t.test(cats.female[,2],cats.male[,2], var.equal = FALSE)
wilcox.test(cats.female[,2],cats.male[,2])
?wilcox.test()
plot(cats[,2], cats[,3])
plot(cats[,2], cats[,3], col="blue")
plot(cats[,2], cats[,3], col="blue",pch=2)
plot(cats[,2], cats[,3], col="blue",pch=4)
plot(cats[,2], cats[,3], col="blue",pch=10)
plot(cats[,2], cats[,3], col="blue",pch=10, main="Cat body-hear weight",
xlab="Body weight", ylab="Heart weight")
plot(cats[,2], cats[,3], col="blue",pch=10, main="Cat body-hear weight",
xlab="Body weight", ylab="Heart weight", cex=1.5)
plot(cats[,2], cats[,3], col="blue",pch=10, main="Cat body-hear weight",
xlab="Body weight", ylab="Heart weight", cex=10)
plot(cats[,2], cats[,3], col="blue",pch=10, main="Cat body-hear weight",
xlab="Body weight", ylab="Heart weight", cex=10,cex.main=1.5)
plot(cats[,2], cats[,3], col="blue",pch=10, main="Cat body-hear weight",
xlab="Body weight", ylab="Heart weight", cex=1.5, cex.main=1.5)
plot(cats[,2], cats[,3], col="blue",pch=10, main="Cat body-hear weight",
xlab="Body weight", ylab="Heart weight", cex=1.5, cex.main=1.5, xlim=c(2,2.1))
plot(cats[,2], cats[,3], col="blue",pch=10, main="Cat body-hear weight",
xlab="Body weight", ylab="Heart weight", cex=1.5, cex.main=1.5, xlim=c(2,2.5))
plot(cats[,2], cats[,3], col="blue",pch=10, main="Cat body-hear weight",
xlab="Body weight", ylab="Heart weight", cex=1.5, cex.main=1.5,
xlim=c(2,2.5),ylim=c(6,15))
?hist()
hist(cats[,2])
?hist()
hist(cats[,2], breaks=10)
size(cats[,2])
cats
hist(cats[1:10,2], breaks=10)
hist(cats[1:10,2], breaks=2)
hist(cats[1:10,2], breaks=3)
hist(cats[1:10,2], breaks=3)
hist(cats[1:10,2], breaks=3)
hist(cats[1:10,2], breaks=4)
hist(cats[1:10,2], breaks=3)
hist(cats[1:10,2], breaks=2)
hist(cats[1:10,2], breaks=20)
hist(cats[1:10,2], breaks=200)
cats
hist(cats[1:10,3], breaks=200)
hist(cats[1:10,3], breaks=3)
hist(cats[1:10,3], breaks=4)
hist(cats[1:10,3], breaks=4, main="cat heart weight", xlab = "Heart weight")
hist(cats[1:10,3], breaks=4, main="Cat Heart Weight", xlab = "Heart weight")
barplot(cats[1:10,3], breaks=4, main="Cat Heart Weight", xlab = "Heart weight")
barplot(cats[1:10,3], main="Cat Heart Weight", xlab = "Heart weight")
barplot(cats[1:10,3], main="Cat Heart Weight", xlab = "Heart weight")
barplot(cats[1:10,3])
barplot(cats[1:10,3])
plot(cats[,2], cats[,3], col="blue",pch=10, main="Cat body-hear weight",
xlab="Body weight", ylab="Heart weight", cex=1.5, cex.main=1.5,
xlim=c(2,2.5),ylim=c(6,15))
barplot(cats[1:10,3])
?barplot()
hist(cats[1:10,3], breaks=4, main="Cat Heart Weight", xlab = "Heart weight")
barplot(cats[1:10,3])
barplot(cats[1:10,3], main="Cat Heart Weight", xlab = "Heart weight")
barplot(cats[1:10,3], main="Cat Heart Weight", ylab = "Heart weight")
hist(cats[,2], breaks=4, main="Cat Heart Weight", xlab = "Heart weight")
hist(cats[,2], breaks=7, main="Cat Heart Weight", xlab = "Heart weight")
hist(cats[,2], breaks=10, main="Cat Heart Weight", xlab = "Heart weight")
wilcox.test(cats.female[,2],cats.male[,2])
hist(cats[,2], breaks=10, main="Cat Heart Weight", xlab = "Heart weight")
hist(cats[,2], breaks=20, main="Cat Heart Weight", xlab = "Heart weight")
barplot(cats[1:10,3], main="Cat Heart Weight", ylab = "Heart weight")
barplot(cats[1:10,3], main="10 Cats Heart Weight", ylab = "Heart weight")
pdf(file="cats.pdf",width = 9, height = 8)
barplot(cats[1:10,3], main="10 Cats Heart Weight", ylab = "Heart weight")
dev.off()
source("~/R/cats_dataset.R")
pdf(file="cats.pdf",width = 9, height = 8)
barplot(cats[1:10,3], main="10 Cats Heart Weight", ylab = "Heart weight")
dev.off()
?bitmap
?pdf()
source("~/R/cats_dataset.R")
setwd("~/R")
source("~/R/cats_dataset.R")
matrix(1:2,nrow=1, ncol=2)
fibonacci(1)
source("~/R/Functions.R")
fibonacci(1)
source("~/R/Functions.R")
source("~/R/Functions.R")
fibonacci(1)
fibonacci(2)
fibonacci(3)
fibonacci(4)
fibonacci(5)
fibonacci(6)
source("~/R/Functions.R")
fibonacci(3)
fibonacci(4)
source("~/R/Functions.R")
sum_of_integers(2)
return((n+1)*n/2)
source("~/R/Functions.R")
source("~/R/Functions.R")
source("~/R/Functions.R")
sum_of_integers(2)
sum_of_integers(3)
sum_of_integers(4)
source("~/R/Functions.R")
source("~/R/Functions.R")
source("~/R/Functions.R")
source("~/R/Functions.R")
source("~/R/Functions.R")
Euclidean_distance(c(1,1),c(0,0))
source("~/R/Functions.R")
Euclidean_distance(c(1,1),c(0,0))
Euclidean_distance(c(1,1,1),c(0,0,0))
sqrt(3)
rm(list=ls())
source("~/R/Functions.R")
source("~/R/Functions.R")
source("~/R/Functions.R")
source("~/R/Functions.R")
fibonacci(4)
source("~/R/Functions.R")
fibonacci(4)
source("~/R/Functions.R")
fibonacci(3)
source("~/R/Functions.R")
fibonacci(1)
fibonacci(2)
fibonacci(3)
source("~/R/Functions.R")
source("~/R/Functions.R")
fibonacci(3)
fibonacci(1)
source("~/R/Functions.R")
fib = numeric(n)
fibonacci(1)
source("~/R/Functions.R")
source("~/R/Functions.R")
source("~/R/Functions.R")
fibonacci(1)
if (n == 0) {return 0}
source("~/R/Functions.R")
source("~/R/Functions.R")
source("~/R/Functions.R")
fibonacci(1)
fibonacci(2)
source("~/R/Functions.R")
source("~/R/cats_dataset.R")
plot(cats[,2], cats[,3], col="blue",pch=10, main="Cat body-hear weight",
xlab="Body weight", ylab="Heart weight", cex=1.5, cex.main=1.5,
xlim=c(2,2.5),ylim=c(6,15))
source("~/R/Functions.R")
Euclidean_distance(c(1,1,1),c(0,0,0))
Euclidean_distance(c(2,5,6,7,3),c(5,2,8,4,4))
fibonacci(15)
source("~/R/Functions.R")
fibonacci(15)
source("~/R/Functions.R")
fibonacci(15)
source("~/R/Functions.R")
fibonacci(15)
source("~/R/Functions.R")
fibonacci(15)
source("~/R/Functions.R")
